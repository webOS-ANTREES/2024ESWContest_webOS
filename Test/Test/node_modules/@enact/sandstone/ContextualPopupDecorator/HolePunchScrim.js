"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.HolePunchScrimDecorator = exports.HolePunchScrimBase = exports.HolePunchScrim = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _resolution = require("@enact/ui/resolution");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _compose = _interopRequireDefault(require("ramda/src/compose"));
var _Skinnable = _interopRequireDefault(require("../Skinnable"));
var _HolePunchScrimModule = _interopRequireDefault(require("./HolePunchScrim.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var autoUnit = function autoUnit(size) {
  return typeof size === 'number' ? (0, _resolution.unit)(size, 'rem') : size;
};
var HolePunchScrimBase = exports.HolePunchScrimBase = (0, _kind["default"])({
  name: 'HolePunchScrim',
  propTypes: {
    holeBounds: _propTypes["default"].shape({
      height: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
      right: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
      top: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),
      width: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string])
    })
  },
  defaultProps: {
    holeBounds: {}
  },
  styles: {
    css: _HolePunchScrimModule["default"],
    className: 'holePunchScrim'
  },
  computed: {
    style: function style(_ref) {
      var _ref$holeBounds = _ref.holeBounds,
        _ref$holeBounds$top = _ref$holeBounds.top,
        top = _ref$holeBounds$top === void 0 ? 0 : _ref$holeBounds$top,
        _ref$holeBounds$left = _ref$holeBounds.left,
        left = _ref$holeBounds$left === void 0 ? 0 : _ref$holeBounds$left,
        _ref$holeBounds$width = _ref$holeBounds.width,
        width = _ref$holeBounds$width === void 0 ? 0 : _ref$holeBounds$width,
        _ref$holeBounds$heigh = _ref$holeBounds.height,
        height = _ref$holeBounds$heigh === void 0 ? 0 : _ref$holeBounds$heigh,
        _style = _ref.style;
      return _objectSpread(_objectSpread({}, _style), {}, {
        '--hole-height': autoUnit(height),
        '--hole-width': autoUnit(width),
        '--hole-top': autoUnit(top),
        '--hole-left': autoUnit(left)
      });
    }
  },
  render: function render(_ref2) {
    var rest = Object.assign({}, (_objectDestructuringEmpty(_ref2), _ref2));
    delete rest.holeBounds;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, rest));
  }
});
var HolePunchScrimDecorator = exports.HolePunchScrimDecorator = (0, _compose["default"])(_Skinnable["default"]);
var HolePunchScrim = exports.HolePunchScrim = HolePunchScrimDecorator(HolePunchScrimBase);
var _default = exports["default"] = HolePunchScrim;