"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ImageDecorator = exports.ImageBase = exports.Image = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _hoc = _interopRequireDefault(require("@enact/core/hoc"));
var _Image = require("@enact/ui/Image");
var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));
var _ForwardRef = _interopRequireDefault(require("@enact/ui/ForwardRef"));
var _Pure = _interopRequireDefault(require("@enact/ui/internal/Pure"));
var _resolution = require("@enact/ui/resolution");
var _propTypes2 = _interopRequireDefault(require("prop-types"));
var _compose = _interopRequireDefault(require("ramda/src/compose"));
var _react = require("react");
var _Skinnable = _interopRequireDefault(require("../Skinnable"));
var _ImageModule = _interopRequireDefault(require("./Image.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["css", "componentRef"];
/**
 * Provides Sandstone styled Image component that supports multiple resolution sources.
 *
 * @example
 * <Image src="https://dummyimage.com/64/e048e0/0011ff" style={{height: 64, width: 64}} />
 *
 * @module sandstone/Image
 * @exports Image
 * @exports ImageBase
 * @exports ImageDecorator
 */
/**
 * A Sandstone-styled image component without any behavior
 *
 * @class ImageBase
 * @memberof sandstone/Image
 * @extends ui/Image.Image
 * @ui
 * @public
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var ImageBase = exports.ImageBase = (0, _kind["default"])({
  name: 'Image',
  propTypes: /** @lends sandstone/Image.ImageBase.prototype */{
    /**
     * Called with a reference to the root component.
     *
     * When using {@link sandstone/Image.Image}, the `ref` prop is forwarded to this component
     * as `componentRef`.
     *
     * @type {Object|Function}
     * @public
     */
    componentRef: _propTypes["default"].ref,
    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `image` - The root component class for Image
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object
  },
  styles: {
    css: _ImageModule["default"],
    publicClassNames: ['image']
  },
  render: function render(_ref) {
    var css = _ref.css,
      componentRef = _ref.componentRef,
      rest = _objectWithoutProperties(_ref, _excluded);
    return _Image.ImageBase.inline(_objectSpread(_objectSpread({
      draggable: 'false'
    }, rest), {}, {
      componentRef: componentRef,
      css: css
    }));
  }
});

// This induces a render when there is a screen size change that has a corresponding image src value
// associated with the new screen size. The render is kicked off by remembering the new image src.
//
// This hoc could (should) be rewritten at a later time to use a smarter context API and callbacks,
// or something like pub/sub; each of which would be hooked together from the resolution.js that
// would coordinate any screen size/orientation changes and emit events from there.
//
// This is ripe for refactoring, and could probably move into UI to be generalized, but that's for
// another time. -B 2018-05-01
var ResponsiveImageDecorator = (0, _hoc["default"])(function (config, Wrapped) {
  var _class;
  return _class = /*#__PURE__*/function (_Component) {
    _inherits(_class, _Component);
    var _super = _createSuper(_class);
    function _class(_props) {
      var _this;
      _classCallCheck(this, _class);
      _this = _super.call(this, _props);
      _this.handleResize = function () {
        _this.setState(function (state, props) {
          var src = (0, _resolution.selectSrc)(props.src);
          // Trigger a render and save the currently selected src for later comparisons
          if (src !== state.src) {
            return {
              src: src
            };
          }
          return null;
        });
      };
      _this.state = {
        src: (0, _resolution.selectSrc)(_this.props.src)
      };
      return _this;
    }
    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        window.addEventListener('resize', this.handleResize);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        window.removeEventListener('resize', this.handleResize);
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, this.props));
      }
    }]);
    return _class;
  }(_react.Component), _class.displayName = 'ResponsiveImageDecorator', _class.propTypes = {
    src: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].object])
  }, _class;
});

/**
 * Sandstone-specific behaviors to apply to {@link sandstone/Image.ImageBase|Image}.
 *
 * @hoc
 * @memberof sandstone/Image
 * @mixes sandstone/Skinnable.Skinnable
 * @public
 */
var ImageDecorator = exports.ImageDecorator = (0, _compose["default"])((0, _ForwardRef["default"])({
  prop: 'componentRef'
}), _Pure["default"], ResponsiveImageDecorator, _Skinnable["default"]);

/**
 * A Sandstone-styled image component
 *
 * ```
 * <Image
 *   src={{
 *     'hd': 'https://dummyimage.com/64/e048e0/0011ff',
 *     'fhd': 'https://dummyimage.com/128/e048e0/0011ff',
 *     'uhd': 'https://dummyimage.com/256/e048e0/0011ff'
 *   }}
 * >
 * ```
 *
 * @class Image
 * @memberof sandstone/Image
 * @extends sandstone/Image.ImageBase
 * @mixes sandstone/Image.ImageDecorator
 * @ui
 * @public
 */
var Image = exports.Image = ImageDecorator(ImageBase);
var _default = exports["default"] = Image;