"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _AsyncRenderChildren = _interopRequireDefault(require("../AsyncRenderChildren"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var data = {};
var Component = function Component(props) {
  data = props;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_AsyncRenderChildren["default"], _objectSpread({}, props));
};
describe('AsyncRenderChildren', function () {
  test('should have a fallback content', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      fallback: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: "Loading..."
      }),
      index: 1,
      children: "children"
    }));
    var fallbackContent = data.fallback.props.children;
    expect(fallbackContent).toBe('Loading...');
  });
  test('should have a fallback content after changing index', function () {
    var _render = (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
        fallback: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          children: "Loading..."
        }),
        index: 1,
        children: "children"
      })),
      rerender = _render.rerender;
    rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {
      fallback: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: "Loading..."
      }),
      index: 2,
      children: "children"
    }));
    var fallbackContent = data.fallback.props.children;
    expect(fallbackContent).toBe('Loading...');
  });
});