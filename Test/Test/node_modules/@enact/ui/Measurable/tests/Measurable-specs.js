"use strict";

var _react = require("@testing-library/react");
var _Measurable = _interopRequireWildcard(require("../Measurable"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var data;
var DivComponent = function DivComponent(props) {
  data = props;
  return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    ref: props.controlsRef
  });
};
var MeasurableComponent = (0, _Measurable["default"])({
  refProp: 'controlsRef',
  measurementProp: 'controlsMeasurements'
}, DivComponent);
var UseMeasurableDecorator = function UseMeasurableDecorator(Wrapped) {
  return function UseMeasurableDecorator(props) {
    // eslint-disable-line no-shadow
    var _useMeasurable = (0, _Measurable.useMeasurable)(),
      controlsRef = _useMeasurable.ref,
      _useMeasurable$measur = _useMeasurable.measurement,
      _useMeasurable$measur2 = _useMeasurable$measur === void 0 ? {} : _useMeasurable$measur,
      _useMeasurable$measur3 = _useMeasurable$measur2.width,
      contentWidth = _useMeasurable$measur3 === void 0 ? 0 : _useMeasurable$measur3;
    var measurableProps = {
      controlsRef: controlsRef,
      contentSize: contentWidth
    };
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread({}, props), measurableProps));
  };
};
var UseMeasurableComponent = UseMeasurableDecorator(DivComponent);
describe('Measurable', function () {
  test('should pass \'controlsMeasurements\' prop to the wrapped component', function () {
    var listener = function listener() {};
    global.ResizeObserver = /*#__PURE__*/function () {
      function _class(ls) {
        _classCallCheck(this, _class);
        listener = ls;
      }
      _createClass(_class, [{
        key: "observe",
        value: function observe() {}
      }, {
        key: "unobserve",
        value: function unobserve() {}
      }, {
        key: "disconnect",
        value: function disconnect() {}
      }]);
      return _class;
    }();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(MeasurableComponent, {}));
    (0, _react.act)(function () {
      listener([{
        target: {
          clientWidth: 100,
          scrollWidth: 200,
          clientHeight: 100,
          scrollHeight: 200
        }
      }]);
    });
    expect(data).toHaveProperty('controlsMeasurements');
    global.ResizeObserver = null;
  });
  test('should pass \'controlsRef\' prop to the wrapped component', function () {
    var listener = function listener() {};
    global.MutationObserver = /*#__PURE__*/function () {
      function _class2(ls) {
        _classCallCheck(this, _class2);
        listener = ls;
      }
      _createClass(_class2, [{
        key: "disconnect",
        value: function disconnect() {}
      }, {
        key: "observe",
        value: function observe() {}
      }]);
      return _class2;
    }();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(MeasurableComponent, {}));
    (0, _react.act)(function () {
      listener([{
        addedNodes: [],
        attributeName: "class",
        attributeNamespace: null,
        nextSibling: null,
        oldValue: null,
        previousSibling: null,
        removedNodes: [],
        target: 'div',
        type: "attributes"
      }]);
    });
    expect(data).toHaveProperty('controlsRef');
    global.MutationObserver = null;
  });
});
describe('useMeasurable', function () {
  test('should pass \'controlsRef\' prop to the wrapped component', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(UseMeasurableComponent, {}));
    expect(data).toHaveProperty('controlsRef');
  });
});