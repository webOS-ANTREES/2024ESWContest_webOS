"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Spottable = void 0;
Object.defineProperty(exports, "spottableClass", {
  enumerable: true,
  get: function get() {
    return _useSpottable.spottableClass;
  }
});
Object.defineProperty(exports, "useSpottable", {
  enumerable: true,
  get: function get() {
    return _useSpottable.useSpottable;
  }
});
var _handle = _interopRequireWildcard(require("@enact/core/handle"));
var _useHandlers = _interopRequireDefault(require("@enact/core/useHandlers"));
var _hoc = _interopRequireDefault(require("@enact/core/hoc"));
var _WithRef = require("@enact/core/internal/WithRef");
var _classnames = _interopRequireDefault(require("classnames"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = require("react");
var _useSpottable = require("./useSpottable");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["className", "disabled", "handleForceUpdate", "onSpotlightDisappear", "onSpotlightDown", "onSpotlightLeft", "onSpotlightRight", "onSpotlightUp", "selectionKeys", "spotlightDisabled", "spotlightId"];
/**
 * Adds spottability to components.
 *
 * @module spotlight/Spottable
 * @exports Spottable
 * @exports spottableClass
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var forwardMouseDown = (0, _handle.forward)('onMouseDown'),
  forwardMouseUp = (0, _handle.forward)('onMouseUp'),
  forwardClick = (0, _handle.forward)('onClick'),
  forwardBlur = (0, _handle.forward)('onBlur'),
  forwardFocus = (0, _handle.forward)('onFocus'),
  forwardMouseEnter = (0, _handle.forward)('onMouseEnter'),
  forwardMouseLeave = (0, _handle.forward)('onMouseLeave'),
  forwardKeyDown = (0, _handle.forward)('onKeyDown'),
  forwardKeyUp = (0, _handle.forward)('onKeyUp');
var callContext = function callContext(name) {
  return function (ev, props, context) {
    return context[name](ev, props);
  };
};
var spotHandlers = {
  onKeyDown: (0, _handle["default"])(forwardKeyDown, callContext('onKeyDown'), forwardMouseDown),
  onKeyUp: (0, _handle["default"])(forwardKeyUp, callContext('onKeyUp'), forwardMouseUp, forwardClick),
  onBlur: (0, _handle["default"])(callContext('onBlur'), forwardBlur),
  onFocus: (0, _handle["default"])(callContext('onFocus'), forwardFocus),
  onMouseEnter: (0, _handle["default"])((0, _handle.returnsTrue)(function (ev, props) {
    return forwardMouseEnter(ev, props);
  }), callContext('onMouseEnter')),
  onMouseLeave: (0, _handle["default"])((0, _handle.returnsTrue)(function (ev, props) {
    return forwardMouseLeave(ev, props);
  }), callContext('onMouseLeave'))
};

/**
 * Default configuration for Spottable
 *
 * @hocconfig
 * @memberof spotlight/Spottable.Spottable
 */
var defaultConfig = {
  /**
   * Whether or not the component should emulate mouse events as a response
   * to Spotlight 5-way events.
   *
   * @type {Boolean}
   * @default true
   * @public
   * @memberof spotlight/Spottable.Spottable.defaultConfig
   */
  emulateMouse: true
};

/**
 * Constructs a Spotlight 5-way navigation-enabled higher-order component.
 *
 * Note: This HoC passes a number of props to the wrapped component that should be passed to the
 * main DOM node.
 *
 * Example:
 * ```
 *	const Component = ({myProp, ...rest}) => (
 *		<div {...rest}>{myProp}</div>
 *	);
 *	...
 *	const SpottableComponent = Spottable(Component);
 * ```
 * @class Spottable
 * @memberof spotlight/Spottable
 * @param  {Object} defaultConfig Set of default configuration parameters
 * @param  {Function} Wrapped Component to wrap
 *
 * @hoc
 * @returns {Function} Spottable
 */
var Spottable = exports.Spottable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var emulateMouse = config.emulateMouse;
  var WrappedWithRef = (0, _WithRef.WithRef)(Wrapped);
  function SpottableBase(props) {
    var nodeRef = (0, _react.useRef)();
    var className = props.className,
      disabled = props.disabled,
      handleForceUpdate = props.handleForceUpdate,
      onSpotlightDisappear = props.onSpotlightDisappear,
      onSpotlightDown = props.onSpotlightDown,
      onSpotlightLeft = props.onSpotlightLeft,
      onSpotlightRight = props.onSpotlightRight,
      onSpotlightUp = props.onSpotlightUp,
      selectionKeys = props.selectionKeys,
      spotlightDisabled = props.spotlightDisabled,
      spotlightId = props.spotlightId,
      rest = _objectWithoutProperties(props, _excluded);
    var getSpotRef = (0, _react.useCallback)(function () {
      return nodeRef.current;
    }, []);
    var spot = (0, _useSpottable.useSpottable)({
      disabled: disabled,
      emulateMouse: emulateMouse,
      getSpotRef: getSpotRef,
      handleForceUpdate: handleForceUpdate,
      onSelectionCancel: rest.onMouseUp,
      onSpotlightDisappear: onSpotlightDisappear,
      onSpotlightDown: onSpotlightDown,
      onSpotlightLeft: onSpotlightLeft,
      onSpotlightRight: onSpotlightRight,
      onSpotlightUp: onSpotlightUp,
      selectionKeys: selectionKeys,
      spotlightDisabled: spotlightDisabled,
      spotlightId: spotlightId
    });
    var tabIndex = rest.tabIndex;
    if (tabIndex == null) {
      tabIndex = -1;
    }
    rest.tabIndex = tabIndex;
    var handlers = (0, _useHandlers["default"])(spotHandlers, rest, spot);
    delete rest.spotlightId;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(WrappedWithRef, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), spot.attributes), handlers), {}, {
      className: (0, _classnames["default"])(className, spot.className),
      disabled: disabled,
      outermostRef: nodeRef,
      referrerName: "Spottable"
    }));
  }
  SpottableBase.propTypes = /** @lends spotlight/Spottable.Spottable.prototype */{
    /**
     * Whether or not the component is in a disabled state.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes["default"].bool,
    /**
     * The handler to force update the component.
     *
     * @type {Function}
     * @public
     */
    handleForceUpdate: _propTypes["default"].func,
    /**
     * The handler to run when the component is removed while retaining focus.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightDisappear: _propTypes["default"].func,
    /**
     * The handler to run when the 5-way down key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightDown: _propTypes["default"].func,
    /**
     * The handler to run when the 5-way left key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightLeft: _propTypes["default"].func,
    /**
     * The handler to run when the 5-way right key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightRight: _propTypes["default"].func,
    /**
     * The handler to run when the 5-way up key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightUp: _propTypes["default"].func,
    /**
     * An array of numbers representing keyCodes that should trigger mouse event
     * emulation when `emulateMouse` is `true`. If a keyCode equals a directional
     * key, then default 5-way navigation will be prevented when that key is pressed.
     *
     * @type {Number[]}
     * @default [13, 16777221]
     * @public
     */
    selectionKeys: _propTypes["default"].arrayOf(_propTypes["default"].number),
    /**
     * When `true`, the component cannot be navigated using spotlight.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    spotlightDisabled: _propTypes["default"].bool,
    /**
     * Used to identify this component within the Spotlight system
     *
     * @type {String}
     * @public
     */
    spotlightId: _propTypes["default"].string,
    /**
     * The tabIndex of the component. This value will default to -1 if left
     * unset and the control is spottable.
     *
     * @type {Number}
     * @public
     */
    tabIndex: _propTypes["default"].number
  };

  // eslint-disable-next-line no-shadow
  var Spottable = /*#__PURE__*/function (_Component) {
    _inherits(Spottable, _Component);
    var _super = _createSuper(Spottable);
    function Spottable() {
      var _this;
      _classCallCheck(this, Spottable);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _this.handleForceUpdate = function () {
        _this.forceUpdate();
      };
      return _this;
    }
    _createClass(Spottable, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.forceUpdate();
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableBase, _objectSpread(_objectSpread({}, this.props), {}, {
          handleForceUpdate: this.handleForceUpdate
        }));
      }
    }]);
    return Spottable;
  }(_react.Component);
  return Spottable;
});
var _default = exports["default"] = Spottable;