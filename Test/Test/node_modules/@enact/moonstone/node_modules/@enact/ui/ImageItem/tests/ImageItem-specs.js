"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _ImageItem = _interopRequireWildcard(require("../ImageItem"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var src = {
  'hd': 'http://lorempixel.com/64/64/city/1/',
  'fhd': 'http://lorempixel.com/128/128/city/1/',
  'uhd': 'http://lorempixel.com/256/256/city/1/'
};
describe('ImageItem', function () {
  var data;
  var Img = function Img(props) {
    data = props;
    return null;
  };
  test('should support `children` prop', function () {
    var children = 'children';
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      "data-testid": "imageItem",
      src: src.hd,
      children: children
    }));
    var expected = children;
    var imageItem = _react.screen.getByTestId('imageItem');
    expect(imageItem).toHaveTextContent(expected);
  });
  test('should omit caption node when `children` is unset', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      "data-testid": "imageItem",
      src: src
    }));
    var expected = 1;
    var imageItemChildren = _react.screen.getByTestId('imageItem').children;
    expect(imageItemChildren).toHaveLength(expected);
  });
  test('should apply `.horizontal` when `orientation="horizontal"`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem["default"], {
      "data-testid": "imageItem",
      orientation: "horizontal",
      src: src
    }));
    var expected = 'horizontal';
    var imageItem = _react.screen.getByTestId('imageItem');
    expect(imageItem).toHaveClass(expected);
  });
  test('should apply `.vertical` when `orientation="vertical"`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      "data-testid": "imageItem",
      orientation: "vertical",
      src: src
    }));
    var expected = 'vertical';
    var imageItem = _react.screen.getByTestId('imageItem');
    expect(imageItem).toHaveClass(expected);
  });
  test('should apply `.selected` when `selected`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      "data-testid": "imageItem",
      selected: true,
      src: src
    }));
    var expected = 'selected';
    var imageItem = _react.screen.getByTestId('imageItem');
    expect(imageItem).toHaveClass(expected);
  });
  test('should pass `src` and `placeholder` to `imageComponent` as component', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    };
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, _objectSpread({
      imageComponent: Img
    }, props)));
    expect(data).toMatchObject(props);
  });
  test('should pass `src` and `placeholder` to `imageComponent` as element', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    };
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, _objectSpread({
      imageComponent: /*#__PURE__*/(0, _jsxRuntime.jsx)(Img, {})
    }, props)));
    expect(data).toMatchObject(props);
  });
  test('should override `src` and `placeholder` when passing `imageComponent` as element', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    };
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, _objectSpread({
      imageComponent: /*#__PURE__*/(0, _jsxRuntime.jsx)(Img, {
        placeholder: "my-place.png",
        src: "my-src.png"
      })
    }, props)));
    expect(data).toMatchObject(props);
  });
  test('should support string for `src` prop', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      src: src.hd
    }));
    var expected = src.hd;
    var imgElement = _react.screen.getAllByRole('img')[1];
    expect(imgElement).toHaveAttribute('src', expected);
  });
  test('should support object for `src` prop', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      src: src
    }));
    var imgElementSrc = _react.screen.getAllByRole('img')[1];
    expect(imgElementSrc).not.toBeNull();
  });
  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem["default"], {
      ref: ref,
      src: src
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
});