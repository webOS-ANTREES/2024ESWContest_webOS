"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));
var _react2 = require("react");
var _Link = _interopRequireDefault(require("../Link"));
var _Routable = _interopRequireDefault(require("../Routable"));
var _Route = _interopRequireDefault(require("../Route"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
describe('Routable', function () {
  test('should render nothing for a partially valid path', /*#__PURE__*/_asyncToGenerator(function* () {
    var App = function App() {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Link["default"], {
          path: "./page2",
          children: "Page 2"
        })
      });
    };
    var Page2 = function Page2() {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        "data-testid": "page2"
      });
    };
    var Views = (0, _Routable["default"])({
      navigate: 'onNavigate'
    }, function (_ref2) {
      var children = _ref2.children;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: children
      });
    });
    function Sample(props) {
      var _useState = (0, _react2.useState)('/app'),
        _useState2 = _slicedToArray(_useState, 2),
        path = _useState2[0],
        nav = _useState2[1];
      var handleNavigate = (0, _react2.useCallback)(function (ev) {
        return nav(ev.path);
      }, [nav]);
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Views, _objectSpread(_objectSpread({}, props), {}, {
        path: path,
        onNavigate: handleNavigate,
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Route["default"], {
          path: "app",
          component: App,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Route["default"], {
            path: "page2",
            component: Page2
          })
        })
      }));
    }
    var user = _userEvent["default"].setup();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Sample, {}));
    var linkToSecondPage = _react.screen.getByText('Page 2');

    // click once to navigate to new path
    yield user.click(linkToSecondPage);
    var secondPage = _react.screen.getByTestId('page2');
    expect(secondPage).toBeInTheDocument();

    // clicking again should use the same base path "/app" for the same result
    yield user.click(linkToSecondPage);
    secondPage = _react.screen.getByTestId('page2');
    expect(secondPage).toBeInTheDocument();
  }));
});