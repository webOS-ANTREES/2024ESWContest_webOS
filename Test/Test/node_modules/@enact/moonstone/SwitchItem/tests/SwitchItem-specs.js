"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));
var _SwitchItem = _interopRequireWildcard(require("../SwitchItem"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
describe('SwitchItem Specs', function () {
  test('should contain a Switch', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchItem.SwitchItemBase, {}));
    var expected = 'switch';
    var actual = _react.screen.getByRole('checkbox').children[2].children[0];
    expect(actual).toHaveClass(expected);
  });
  test('should pass selected to Switch element', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchItem.SwitchItemBase, {
      selected: true
    }));
    var expected = 'selected';
    var SwitchElement = _react.screen.getByRole('checkbox').children[2].children[0];
    expect(SwitchElement).toHaveClass(expected);
  });
  test('should pass disabled to Switch element', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchItem.SwitchItemBase, {
      disabled: true
    }));
    var expected = 'true';
    var SwitchItemElement = _react.screen.getByRole('checkbox');
    expect(SwitchItemElement).toHaveAttribute('aria-disabled', expected);
  });
  test('should toggle Switch', /*#__PURE__*/_asyncToGenerator(function* () {
    var handleToggle = jest.fn();
    var user = _userEvent["default"].setup();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchItem["default"], {
      onToggle: handleToggle
    }));
    var actual = _react.screen.getByRole('checkbox');
    yield user.click(actual);
    expect(actual).toBeChecked();
    var expectedTimes = 1;
    expect(handleToggle).toBeCalledTimes(expectedTimes);
  }));
  test('should render correct children', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwitchItem["default"], {
      children: "Hello SwitchItem"
    }));
    var Child = _react.screen.getByText(/Hello SwitchItem/i);
    expect(Child).toBeInTheDocument();
  });
});