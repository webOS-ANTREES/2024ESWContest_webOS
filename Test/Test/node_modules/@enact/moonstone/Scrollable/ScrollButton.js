"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ScrollButton = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _ForwardRef = _interopRequireDefault(require("@enact/ui/ForwardRef"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactDom = _interopRequireDefault(require("react-dom"));
var _IconButton = _interopRequireDefault(require("../IconButton"));
var _ScrollbarModule = _interopRequireDefault(require("./Scrollbar.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "disabled", "forwardRef"];
/**
 * An {@link moonstone/IconButton.IconButton|IconButton} used within
 * a {@link moonstone/Scrollable.Scrollbar|Scrollbar}.
 *
 * @class ScrollButton
 * @memberof moonstone/Scrollable
 * @extends moonstone/IconButton.IconButton
 * @ui
 * @private
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var ScrollButtonBase = (0, _kind["default"])({
  name: 'ScrollButton',
  propTypes: /** @lends moonstone/Scrollable.ScrollButton.prototype */{
    /**
     * Name of icon.
     *
     * @type {String}
     * @required
     * @public
     */
    children: _propTypes["default"].string.isRequired,
    /**
     * Sets the `aria-label`.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    active: _propTypes["default"].bool,
    /**
    * Sets the hint string read when focusing the scroll bar button.
    *
    * @type {String}
    * @memberof moonstone/Scrollable.ScrollButton.prototype
    * @public
    */
    'aria-label': _propTypes["default"].string,
    /**
     * Disables the button.
     *
     * @type {Boolean}
     * @public
     */
    disabled: _propTypes["default"].bool,
    /**
     * Returns a ref to the root node of the scroll button
     *
     * See: https://github.com/facebook/prop-types/issues/240
     *
     * @type {Function|Object}
     * @private
     */
    forwardRef: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].shape({
      current: _propTypes["default"].any
    })])
  },
  styles: {
    css: _ScrollbarModule["default"],
    className: 'scrollButton'
  },
  handlers: {
    forwardRef: function forwardRef(node, _ref) {
      var _forwardRef = _ref.forwardRef;
      // Allowing findDOMNode in the absence of a means to retrieve a node ref through IconButton
      // eslint-disable-next-line react/no-find-dom-node
      var current = _reactDom["default"].findDOMNode(node);

      // Safely handle old ref functions and new ref objects
      switch (typeof _forwardRef) {
        case 'object':
          _forwardRef.current = current;
          break;
        case 'function':
          _forwardRef(current);
          break;
      }
    }
  },
  computed: {
    'aria-label': function ariaLabel(_ref2) {
      var active = _ref2.active,
        _ariaLabel = _ref2['aria-label'];
      return active ? null : _ariaLabel;
    }
  },
  render: function render(_ref3) {
    var children = _ref3.children,
      disabled = _ref3.disabled,
      forwardRef = _ref3.forwardRef,
      rest = _objectWithoutProperties(_ref3, _excluded);
    delete rest.active;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_IconButton["default"], _objectSpread(_objectSpread({}, rest), {}, {
      backgroundOpacity: "transparent",
      disabled: disabled,
      ref: forwardRef,
      size: "small",
      children: children
    }));
  }
});
var ScrollButton = exports.ScrollButton = (0, _ForwardRef["default"])(ScrollButtonBase);
var _default = exports["default"] = ScrollButton;