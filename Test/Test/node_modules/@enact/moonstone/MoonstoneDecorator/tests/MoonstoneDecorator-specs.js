"use strict";

var _spotlight = _interopRequireDefault(require("@enact/spotlight"));
require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _ = _interopRequireDefault(require("../"));
var _MoonstoneDecoratorModule = _interopRequireDefault(require("../MoonstoneDecorator.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
describe('MoonstoneDecorator', function () {
  var AppRoot = function AppRoot(props) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({
      "data-app": true
    }, props));
  };
  test('should add base moonstone classes to wrapped component', function () {
    var config = {
      ri: false,
      i18n: false,
      spotlight: false,
      "float": false,
      overlay: false
    };
    var App = (0, _["default"])(config, AppRoot);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {
      "data-testid": "app"
    }));
    _spotlight["default"].terminate();
    var appRoot = _react.screen.getByTestId('app');
    var expectedClass = 'moonstone';
    var expectedBgClass = _MoonstoneDecoratorModule["default"].bg;
    expect(appRoot).toHaveClass(expectedClass);
    expect(appRoot).toHaveClass(expectedBgClass);
  });
  test('should add author classes to wrapped component', function () {
    var config = {
      ri: false,
      i18n: false,
      spotlight: false,
      "float": false,
      overlay: false
    };
    var App = (0, _["default"])(config, AppRoot);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {
      className: "author-class",
      "data-testid": "app"
    }));
    _spotlight["default"].terminate();
    var appRoot = _react.screen.getByTestId('app');
    var expectedClass = 'author-class';
    expect(appRoot).toHaveClass(expectedClass);
  });
  test('should not add .moonstone class to wrapped component when float is enabled', function () {
    var config = {
      ri: false,
      i18n: false,
      spotlight: false,
      "float": true,
      overlay: false
    };
    var App = (0, _["default"])(config, AppRoot);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {
      "data-testid": "app"
    }));
    _spotlight["default"].terminate();
    var appRoot = _react.screen.getByTestId('app');
    var notExpected = 'moonstone';
    expect(appRoot).not.toHaveClass(notExpected);
  });
  test('should not add .bg class to wrapped component when overlay is enabled', function () {
    var config = {
      ri: false,
      i18n: false,
      spotlight: false,
      "float": false,
      overlay: true
    };
    var App = (0, _["default"])(config, AppRoot);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(App, {
      "data-testid": "app"
    }));
    _spotlight["default"].terminate();
    var appRoot = _react.screen.getByTestId('app');
    var notExpected = _MoonstoneDecoratorModule["default"].bg;
    expect(appRoot).not.toHaveClass(notExpected);
  });
});