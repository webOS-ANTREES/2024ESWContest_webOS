"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.LabeledItemBase = exports.LabeledItem = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Pure = _interopRequireDefault(require("@enact/ui/internal/Pure"));
var _Touchable = _interopRequireDefault(require("@enact/ui/Touchable"));
var _Spottable = _interopRequireDefault(require("@enact/spotlight/Spottable"));
var _Icon = _interopRequireDefault(require("../Icon"));
var _Item = require("../Item");
var _Marquee = require("../Marquee");
var _Skinnable = _interopRequireDefault(require("../Skinnable"));
var _LabeledItemModule = _interopRequireDefault(require("./LabeledItem.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "css", "disabled", "label", "marqueeOn", "titleIcon"];
/**
 * Provides Moonstone styled item with a label below.
 *
 * @example
 * <LabeledItem label="Label">Hello LabeledItem</LabeledItem>
 *
 * @module moonstone/LabeledItem
 * @exports LabeledItem
 * @exports LabeledItemBase
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Controller = (0, _Marquee.MarqueeController)({
  marqueeOnFocus: true
}, (0, _Touchable["default"])((0, _Spottable["default"])(_Item.ItemBase)));

/**
 * A focusable component that combines marquee-able text content with a synchronized
 * marquee-able text label.
 *
 * @class LabeledItemBase
 * @memberof moonstone/LabeledItem
 * @extends moonstone/Item.ItemBase
 * @mixes spotlight/Spottable.Spottable
 * @mixes ui/Touchable.Touchable
 * @mixes moonstone/Marquee.MarqueeController
 * @ui
 * @public
 */
var LabeledItemBase = exports.LabeledItemBase = (0, _kind["default"])({
  name: 'LabeledItem',
  propTypes: /** @lends moonstone/LabeledItem.LabeledItemBase.prototype */{
    /**
     * The node to be displayed as the main content of the item.
     *
     * @type {Node}
     * @required
     * @public
     */
    children: _propTypes["default"].node.isRequired,
    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `labeledItem` - The root class name
     * * `icon` - Applied to the icon
     * * `label` - Applied to the label
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,
    /**
     * Applies a disabled style and the control becomes non-interactive.
     *
     * @type {Boolean}
     * @public
     */
    disabled: _propTypes["default"].bool,
    /**
     * The label to be displayed along with the text.
     *
     * @type {Node}
     * @public
     */
    label: _propTypes["default"].node,
    /**
     * Determines what triggers the `LabelItem`'s marquee to start its animation.
     *
     * @type {('focus'|'hover'|'render')}
     * @default 'focus'
     * @public
     */
    marqueeOn: _propTypes["default"].oneOf(['focus', 'hover', 'render']),
    /**
     * Icon to be displayed next to the title text.
     *
     * @type {String|Object}
     * @public
     */
    titleIcon: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object])
  },
  styles: {
    css: _LabeledItemModule["default"],
    className: 'labeledItem',
    publicClassNames: ['labeledItem', 'icon', 'label']
  },
  render: function render(_ref) {
    var children = _ref.children,
      css = _ref.css,
      disabled = _ref.disabled,
      label = _ref.label,
      marqueeOn = _ref.marqueeOn,
      titleIcon = _ref.titleIcon,
      rest = _objectWithoutProperties(_ref, _excluded);
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(Controller, _objectSpread(_objectSpread({
      disabled: disabled
    }, rest), {}, {
      css: css,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: css.text,
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, {
          disabled: disabled,
          className: css.title,
          marqueeOn: marqueeOn,
          children: children
        }), titleIcon != null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon["default"], {
          size: "small",
          className: css.icon,
          children: titleIcon
        }) : null]
      }), label != null ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, {
        disabled: disabled,
        className: css.label,
        marqueeOn: marqueeOn,
        children: label
      }) : null]
    }));
  }
});

/**
 * A Moonstone styled labeled item with built-in support for marqueed text and Spotlight focus.
 *
 * @class LabeledItem
 * @memberof moonstone/LabeledItem
 * @extends moonstone/LabeledItem.LabeledItemBase
 * @mixes moonstone/Skinnable.Skinnable
 * @ui
 * @public
 */
var LabeledItem = exports.LabeledItem = (0, _Pure["default"])((0, _Skinnable["default"])(LabeledItemBase));
var _default = exports["default"] = LabeledItem;