"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TooltipLabel = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _util = require("@enact/i18n/util");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _TooltipModule = _interopRequireDefault(require("./Tooltip.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * {@link moonstone/TooltipDecorator.TooltipLabel} is a stateless tooltip component with
 * Moonston styling applied.
 *
 * @class TooltipLabel
 * @memberof moonstone/TooltipDecorator
 * @ui
 * @private
 */
var TooltipLabel = exports.TooltipLabel = (0, _kind["default"])({
  name: 'TooltipLabel',
  propTypes: /** @lends moonstone/TooltipDecorator.TooltipLabel.prototype */{
    /**
     * The node to be displayed as the main content of the tooltip.
     *
     * @type {Node}
     * @required
     */
    children: _propTypes["default"].node.isRequired,
    /**
     * The width of tooltip content in pixels (px). If the content goes over the given width,
     * then it will automatically wrap. When `null`, content does not wrap.
     *
     * @type {Number}
     * @public
     */
    width: _propTypes["default"].number
  },
  styles: {
    css: _TooltipModule["default"],
    className: 'tooltipLabel'
  },
  computed: {
    className: function className(_ref) {
      var width = _ref.width,
        styler = _ref.styler;
      return styler.append({
        multi: !!width
      });
    },
    style: function style(_ref2) {
      var children = _ref2.children,
        width = _ref2.width,
        _style = _ref2.style;
      return _objectSpread(_objectSpread({}, _style), {}, {
        direction: (0, _util.isRtlText)(children) ? 'rtl' : 'ltr',
        width: width
      });
    }
  },
  render: function render(_ref3) {
    var children = _ref3.children,
      rest = _objectWithoutProperties(_ref3, _excluded);
    delete rest.width;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread(_objectSpread({}, rest), {}, {
      children: children
    }));
  }
});
var _default = exports["default"] = TooltipLabel;