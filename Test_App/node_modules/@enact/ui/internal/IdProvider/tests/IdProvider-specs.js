"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _IdProvider = _interopRequireDefault(require("../IdProvider"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
describe('IdProvider', function () {
  test('should pass id to wrapped component', function () {
    var Base = function Base(props) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({
        role: "button"
      }, props));
    };
    var Component = (0, _IdProvider["default"])({
      generateProp: null,
      prefix: 'custom_'
    }, Base);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));
    var wrappedDiv = _react.screen.getByRole('button');
    var expected = 'custom_1';
    expect(wrappedDiv).toHaveAttribute('id', expected);
  });
  test('should create a generation function with a name indicated by \'generateProp\'', function () {
    var expected = 'customProp';
    var actual;
    var Base = function Base(props) {
      actual = props;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {});
    };
    var Component = (0, _IdProvider["default"])({
      generateProp: expected,
      prefix: 'custom_'
    }, Base);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));

    // eslint-disable-next-line no-undefined
    expect(actual[expected]).not.toBe(undefined);
    expect(typeof actual[expected]).toBe('function');
  });
});