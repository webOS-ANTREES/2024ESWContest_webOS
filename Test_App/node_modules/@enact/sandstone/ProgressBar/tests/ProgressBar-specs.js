"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _ProgressBar = _interopRequireWildcard(require("../ProgressBar"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
describe('ProgressBar Specs', function () {
  test('should only show tooltip when tooltip is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
      tooltip: true
    }));
    var tooltip = _react.screen.getByRole('progressbar').children.item(1);
    var expected = 'tooltip';
    expect(tooltip).toHaveClass(expected);
  });
  test('should have tooltip show progress as percentage', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
      tooltip: true,
      progress: 0.6
    }));
    var expected = '60%';
    var actual = _react.screen.getByRole('progressbar').textContent;
    expect(actual).toBe(expected);
  });
  describe('ProgressBar with horizontal orientation', function () {
    test('should have default orientation of horizontal', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {}));
      var progressBar = _react.screen.getByRole('progressbar');
      var expected = 'horizontal';
      expect(progressBar).toHaveClass(expected);
    });
    test('should have tooltip above after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above center', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above center"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above center';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below center', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below center"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below center';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip in default position (above)', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {})
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above';
      expect(tooltip).toHaveClass(expected);
    });
  });
  describe('ProgressBar with vertical orientation', function () {
    test('should have vertical orientation', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical"
      }));
      var progressBar = _react.screen.getByRole('progressbar');
      var expected = 'vertical';
      expect(progressBar).toHaveClass(expected);
    });
    test('should have tooltip after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip in default position (after)', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "vertical",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {})
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'after';
      expect(tooltip).toHaveClass(expected);
    });
  });
  describe('ProgressBar with radial orientation', function () {
    test('should have radial orientation', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial"
      }));
      var progressBar = _react.screen.getByRole('progressbar');
      var expected = 'radial';
      expect(progressBar).toHaveClass(expected);
    });
    test('should have tooltip above', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above center', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above center"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above center';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip above right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "above right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below center', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below center"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below center';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip below right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "below right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'below right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip after', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "after"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'after';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip before', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "before"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'before';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip left', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "left"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'left';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip right', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {
          position: "right"
        })
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'right';
      expect(tooltip).toHaveClass(expected);
    });
    test('should have tooltip in default position (above)', function () {
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        orientation: "radial",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar.ProgressBarTooltip, {})
      }));
      var tooltip = _react.screen.getByRole('progressbar').children.item(1);
      var expected = 'above';
      expect(tooltip).toHaveClass(expected);
    });
  });
});