"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DateComponentRangePickerBase = exports.DateComponentRangePicker = void 0;
var _Changeable = _interopRequireDefault(require("@enact/ui/Changeable"));
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _RangePicker = _interopRequireDefault(require("../../RangePicker"));
var _DateComponentPickerModule = _interopRequireDefault(require("./DateComponentPicker.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["accessibilityHint", "label", "max", "min", "noAnimation", "value", "wrap", "voiceLabel"];
/**
 * {@link sandstone/internal/DataComponentPicker.DateComponentRangePicker} allows the selection of
 * one part of the date or time using a {@link sandstone/RangePicker.RangePicker}.
 *
 * @class DateComponentRangePickerBase
 * @memberof sandstone/internal/DateComponentPicker
 * @ui
 * @private
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var DateComponentRangePickerBase = exports.DateComponentRangePickerBase = (0, _kind["default"])({
  name: 'DateComponentRangePicker',
  propTypes: /** @lends sandstone/internal/DateComponentPicker.DateComponentRangePickerBase.prototype */{
    /**
     * The maximum value for the date component
     *
     * @type {Number}
     * @required
     */
    max: _propTypes["default"].number.isRequired,
    /**
     * The minimum value for the date component
     *
     * @type {Number}
     * @required
     */
    min: _propTypes["default"].number.isRequired,
    /**
     * The value of the date component
     *
     * @type {Number}
     * @required
     */
    value: _propTypes["default"].number.isRequired,
    /**
     * Sets the hint string read when focusing the picker.
     *
     * @type {String}
     * @public
     */
    accessibilityHint: _propTypes["default"].string,
    /**
     * The label to display below the picker
     *
     * @type {String}
     */
    label: _propTypes["default"].string,
    /**
     * By default, the picker will animate transitions between items if it has a defined
     * `width`. Specifying `noAnimation` will prevent any transition animation for the
     * component.
     *
     * @type {Boolean}
     * @public
     */
    noAnimation: _propTypes["default"].bool,
    /*
     * When `true`, allow the picker to continue from the opposite end of the list of options.
     *
     * @type {Boolean}
     * @public
     */
    wrap: _propTypes["default"].bool
  },
  styles: {
    css: _DateComponentPickerModule["default"],
    className: 'dateComponentPicker'
  },
  computed: {
    voiceLabel: function voiceLabel(_ref) {
      var min = _ref.min,
        max = _ref.max;
      return JSON.stringify([min, max]);
    }
  },
  render: function render(_ref2) {
    var accessibilityHint = _ref2.accessibilityHint,
      label = _ref2.label,
      max = _ref2.max,
      min = _ref2.min,
      noAnimation = _ref2.noAnimation,
      value = _ref2.value,
      wrap = _ref2.wrap,
      voiceLabel = _ref2.voiceLabel,
      rest = _objectWithoutProperties(_ref2, _excluded);
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_RangePicker["default"], _objectSpread(_objectSpread({}, rest), {}, {
      accessibilityHint: accessibilityHint == null ? label : accessibilityHint,
      "data-webos-voice-labels-ext": voiceLabel,
      joined: true,
      max: max,
      min: min,
      noAnimation: noAnimation,
      orientation: "vertical",
      value: value,
      wrap: wrap
    }));
  }
});

/**
 * {@link sandstone/internal/DateComponentPicker.DateComponentRangePicker} allows the selection of one
 * part of the date (date, month, or year). It is a stateful component but allows updates by
 * providing a new `value` via props.
 *
 * @class DateComponentRangePicker
 * @memberof sandstone/internal/DateComponentPicker
 * @mixes ui/Changeable.Changeable
 * @ui
 * @private
 */
var DateComponentRangePicker = exports.DateComponentRangePicker = (0, _Changeable["default"])(DateComponentRangePickerBase);
var _default = exports["default"] = DateComponentRangePicker;