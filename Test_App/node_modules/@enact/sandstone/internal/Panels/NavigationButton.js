"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.NavigationButton = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _util = require("@enact/core/util");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = require("react");
var _Button = _interopRequireDefault(require("../../Button"));
var _NavigationButtonModule = _interopRequireDefault(require("./NavigationButton.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["component", "focusEffectIconOnly", "visible"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var NavigationButton = exports.NavigationButton = (0, _kind["default"])({
  name: 'NavigationButton',
  propTypes: {
    component: _propTypes["default"].oneOfType([_propTypes["default"].bool, _propTypes["default"].element, _propTypes["default"].func]),
    focusEffectIconOnly: _propTypes["default"].bool,
    onClick: _propTypes["default"].func,
    visible: _propTypes["default"].bool
  },
  render: function render(_ref) {
    var component = _ref.component,
      focusEffectIconOnly = _ref.focusEffectIconOnly,
      visible = _ref.visible,
      rest = _objectWithoutProperties(_ref, _excluded);
    if ( /*#__PURE__*/(0, _react.isValidElement)(component)) {
      (0, _util.extractAriaProps)(rest);
      Object.keys(component.props).forEach(function (key) {
        // Using the provided prop values as defaults for any component.props value that is
        // strictly undefined. This follows React's convention for default props in which a
        // default is used when a prop is either explicitly undefined or omitted and
        // therefore implicitly undefined.
        if (typeof component.props[key] !== 'undefined') {
          rest[key] = component.props[key];
        }
      });
      var Type = component.type;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Type, _objectSpread({
        css: focusEffectIconOnly ? _NavigationButtonModule["default"] : null
      }, rest));
    } else if (
    // Explicitly disabled via false/null or visible is set to false
    component === false || component === null ||
    // Using the default config and hidden at this time
    typeof component === 'undefined' && !visible) {
      return null;
    }
    var Component = typeof component === 'function' ? component : _Button["default"];
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, _objectSpread({
      css: focusEffectIconOnly ? _NavigationButtonModule["default"] : null
    }, rest));
  }
});
var _default = exports["default"] = NavigationButton;