"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DebounceDecorator = void 0;
var _hoc = _interopRequireDefault(require("@enact/core/hoc"));
var _util = require("@enact/core/util");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); } /**
                                                                                                                                                                                                                      * Exports the {@link sandstone/internal/DebounceDecorator.DebounceDecorator} higher-order component
                                                                                                                                                                                                                      *
                                                                                                                                                                                                                      * @module sandstone/internal/DebounceDecorator
                                                                                                                                                                                                                      * @private
                                                                                                                                                                                                                      */ /**
                                                                                                                                                                                                                          * Default config for {@link sandstone/internal/DebounceDecorator.DebounceDecorator}.
                                                                                                                                                                                                                          *
                                                                                                                                                                                                                          * @memberof sandstone/internal/DebounceDecorator.DebounceDecorator
                                                                                                                                                                                                                          * @hocconfig
                                                                                                                                                                                                                          */
var defaultConfig = {
  /**
   * Event name to cancel an active debounce
   *
   * @type {String}
   * @default null
   * @memberof sandstone/internal/DebounceDecorator.DebounceDecorator.defaultConfig
   */
  cancel: null,
  /**
   * Event name to debounce
   *
   * @type {String}
   * @default 'onChange'
   * @memberof sandstone/internal/DebounceDecorator.DebounceDecorator.defaultConfig
   */
  debounce: 'onChange',
  /**
   * Time, in milliseconds, to wait before emitting the event
   *
   * @type {Number}
   * @default 500
   * @memberof sandstone/internal/DebounceDecorator.DebounceDecorator.defaultConfig
   */
  delay: 500
};

/**
 * Provides common means of delaying an event response, like throttling
 *
 * This is useful if events are flooding in too quickly to efficiently handle. This lets you ignore
 * events occurring after `delay` of milliseconds.
 *
 * @class DebounceDecorator
 * @memberof sandstone/internal/DebounceDecorator
 * @hoc
 * @private
 */
var DebounceDecorator = exports.DebounceDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class;
  var cancel = config.cancel,
    debounce = config.debounce,
    delay = config.delay;
  return _class = /*#__PURE__*/function (_Component) {
    _inherits(_class, _Component);
    var _super = _createSuper(_class);
    function _class(props) {
      var _this;
      _classCallCheck(this, _class);
      _this = _super.call(this, props);
      _this.handleEvent = function (ev) {
        _this.job.start(ev);
      };
      _this.handleCancel = function (ev) {
        if (_this.props[cancel]) {
          _this.props[cancel](ev);
        }
        _this.job.stop();
      };
      _this.job = new _util.Job(_this.emitEvent.bind(_assertThisInitialized(_this)), delay);
      return _this;
    }
    _createClass(_class, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.job.stop();
      }
    }, {
      key: "emitEvent",
      value: function emitEvent(ev) {
        if (this.props[debounce]) {
          this.props[debounce](ev);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props;
        if (debounce || cancel) {
          props = _objectSpread({}, props);
          if (debounce) props[debounce] = this.handleEvent;
          if (cancel) props[cancel] = this.handleCancel;
        }
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, props));
      }
    }]);
    return _class;
  }(_react.Component), _class.displayName = 'DebounceDecorator', _class.propTypes = /** @lends sandstone/internal/DebounceDecorator.DebounceDecorator.prototype */_defineProperty({}, debounce, _propTypes["default"].func), _class;
});
var _default = exports["default"] = DebounceDecorator;