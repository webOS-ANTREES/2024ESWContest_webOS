"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.MediaKnob = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _Slider = require("@enact/ui/Slider");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["preview", "previewProportion", "value"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                           * Knob for the MediaSlider in {@link sandstone/MediaPlayer}.
                                                                                                                                                                                                                                                                                                                                                                                           *
                                                                                                                                                                                                                                                                                                                                                                                           * @class MediaKnob
                                                                                                                                                                                                                                                                                                                                                                                           * @memberof sandstone/MediaPlayer
                                                                                                                                                                                                                                                                                                                                                                                           * @ui
                                                                                                                                                                                                                                                                                                                                                                                           * @private
                                                                                                                                                                                                                                                                                                                                                                                           */
var MediaKnob = exports.MediaKnob = (0, _kind["default"])({
  name: 'MediaKnob',
  propTypes: {
    preview: _propTypes["default"].bool,
    previewProportion: _propTypes["default"].number,
    value: _propTypes["default"].number
  },
  computed: {
    style: function style(_ref) {
      var _style = _ref.style,
        preview = _ref.preview,
        previewProportion = _ref.previewProportion;
      if (!preview) {
        return _style;
      }
      return _objectSpread(_objectSpread({}, _style), {}, {
        '--ui-slider-proportion-end-knob': previewProportion
      });
    }
  },
  render: function render(_ref2) {
    var preview = _ref2.preview,
      previewProportion = _ref2.previewProportion,
      value = _ref2.value,
      rest = _objectWithoutProperties(_ref2, _excluded);
    if (preview) {
      value = previewProportion;
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Slider.Knob, _objectSpread(_objectSpread({}, rest), {}, {
      proportion: value,
      value: value
    }));
  }
});
var _default = exports["default"] = MediaKnob;