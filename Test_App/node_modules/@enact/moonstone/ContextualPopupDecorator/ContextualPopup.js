"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ContextualPopupBase = exports.ContextualPopup = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _$L = _interopRequireDefault(require("../internal/$L"));
var _IconButton = _interopRequireDefault(require("../IconButton"));
var _Skinnable = _interopRequireDefault(require("../Skinnable"));
var _ContextualPopupModule = _interopRequireDefault(require("./ContextualPopup.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["arrowPosition", "containerPosition", "containerRef", "children", "className", "closeButton", "direction", "showArrow"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * An SVG arrow for {@link moonstone/ContextualPopupDecorator/ContextualPopup.ContextualPopup}.
 *
 * @class ContextualPopupArrow
 * @memberof moonstone/ContextualPopupDecorator
 * @ui
 * @private
 */
var ContextualPopupArrow = (0, _kind["default"])({
  name: 'ContextualPopupArrow',
  propTypes: /** @lends moonstone/ContextualPopupDecorator.ContextualPopupArrow.prototype */{
    direction: _propTypes["default"].oneOf(['up', 'down', 'left', 'right'])
  },
  defaultProps: {
    direction: 'down'
  },
  styles: {
    css: _ContextualPopupModule["default"],
    className: 'arrow'
  },
  computed: {
    className: function className(_ref) {
      var direction = _ref.direction,
        styler = _ref.styler;
      return styler.append(direction, _ContextualPopupModule["default"].arrow);
    }
  },
  render: function render(props) {
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)("svg", _objectSpread(_objectSpread({}, props), {}, {
      viewBox: "0 0 30 30",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
        d: "M0 18 L15 0 L30 18",
        className: _ContextualPopupModule["default"].arrowBorder
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
        d: "M15 2 L0 20 L30 20 Z",
        className: _ContextualPopupModule["default"].arrowFill
      })]
    }));
  }
});
var ContextualPopupRoot = (0, _Skinnable["default"])({
  defaultSkin: 'light'
}, 'div');

/**
 * A popup component used by
 * {@link moonstone/ContextualPopupDecorator.ContextualPopupDecorator|ContextualPopupDecorator} to
 * wrap its
 * {@link moonstone/ContextualPopupDecorator.ContextualPopupDecorator.popupComponent|popupComponent}.
 *
 * `ContextualPopup` is usually not used directly but is made available for unique application use
 * cases.
 *
 * @class ContextualPopup
 * @memberof moonstone/ContextualPopupDecorator
 * @ui
 * @public
 */
var ContextualPopupBase = exports.ContextualPopupBase = exports.ContextualPopup = (0, _kind["default"])({
  name: 'ContextualPopup',
  propTypes: /** @lends moonstone/ContextualPopupDecorator.ContextualPopup.prototype */{
    /**
     * The contents of the popup.
     *
     * @type {Node}
     * @required
     * @public
     */
    children: _propTypes["default"].node.isRequired,
    /**
     * Style object for arrow position.
     *
     * @type {Object}
     * @public
     */
    arrowPosition: _propTypes["default"].shape({
      bottom: _propTypes["default"].number,
      left: _propTypes["default"].number,
      right: _propTypes["default"].number,
      top: _propTypes["default"].number
    }),
    /**
     * Style object for container position.
     *
     * @type {Object}
     * @public
     */
    containerPosition: _propTypes["default"].shape({
      bottom: _propTypes["default"].number,
      left: _propTypes["default"].number,
      right: _propTypes["default"].number,
      top: _propTypes["default"].number
    }),
    /**
     * Called with the reference to the container node.
     *
     * @type {Function}
     * @public
     */
    containerRef: _propTypes["default"].func,
    /**
     * Direction of ContextualPopup.
     *
     * Can be one of: `'up'`, `'down'`, `'left'`, or `'right'`.
     *
     * @type {('up'|'down'|'left'|'right')}
     * @default 'down'
     * @public
     */
    direction: _propTypes["default"].oneOf(['up', 'down', 'left', 'right']),
    /**
     * Called when the close button is clicked.
     *
     * @type {Function}
     * @public
     */
    onCloseButtonClick: _propTypes["default"].func,
    /**
     * Shows the arrow.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    showArrow: _propTypes["default"].bool,
    /**
     * Shows the close button.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    showCloseButton: _propTypes["default"].bool
  },
  defaultProps: {
    direction: 'down',
    showCloseButton: false
  },
  styles: {
    css: _ContextualPopupModule["default"],
    className: 'container'
  },
  computed: {
    className: function className(_ref2) {
      var showCloseButton = _ref2.showCloseButton,
        styler = _ref2.styler;
      return styler.append({
        reserveClose: showCloseButton
      });
    },
    closeButton: function closeButton(_ref3) {
      var showCloseButton = _ref3.showCloseButton,
        onCloseButtonClick = _ref3.onCloseButtonClick;
      if (showCloseButton) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_IconButton["default"], {
          className: _ContextualPopupModule["default"].closeButton,
          backgroundOpacity: "transparent",
          size: "small",
          onTap: onCloseButtonClick,
          "aria-label": (0, _$L["default"])('Close'),
          children: "closex"
        });
      }
    }
  },
  render: function render(_ref4) {
    var arrowPosition = _ref4.arrowPosition,
      containerPosition = _ref4.containerPosition,
      containerRef = _ref4.containerRef,
      children = _ref4.children,
      className = _ref4.className,
      closeButton = _ref4.closeButton,
      direction = _ref4.direction,
      showArrow = _ref4.showArrow,
      rest = _objectWithoutProperties(_ref4, _excluded);
    delete rest.onCloseButtonClick;
    delete rest.showCloseButton;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ContextualPopupRoot, _objectSpread(_objectSpread({
      "aria-live": "off",
      role: "alert"
    }, rest), {}, {
      className: _ContextualPopupModule["default"].contextualPopup,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: className,
        style: containerPosition,
        ref: containerRef,
        children: [children, closeButton]
      }), showArrow ? /*#__PURE__*/(0, _jsxRuntime.jsx)(ContextualPopupArrow, {
        direction: direction,
        style: arrowPosition
      }) : null]
    }));
  }
});
var _default = exports["default"] = ContextualPopupBase;