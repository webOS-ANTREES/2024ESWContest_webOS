"use strict";

var _react = require("@testing-library/react");
var _Icon = require("../Icon");
var _jsxRuntime = require("react/jsx-runtime");
describe('Icon Specs', function () {
  test('should return the correct Unicode value for named icon `star`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon.IconBase, {
      "data-testid": "icon",
      children: "star"
    }));
    var icon = _react.screen.getByTestId('icon');
    var expected = 983080; // decimal converted charCode of Unicode 'star' character
    var actual = icon.textContent.codePointAt();
    expect(actual).toBe(expected);
  });
  test('should return the correct Unicode value when provided `star` hex value', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon.IconBase, {
      "data-testid": "icon",
      children: "0x0F0028"
    }));
    var icon = _react.screen.getByTestId('icon');
    var expected = 983080; // decimal converted charCode of character
    var actual = icon.textContent.codePointAt();
    expect(actual).toBe(expected);
  });
  test('should return the correct Unicode value when provided HTML entity as hex value', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon.IconBase, {
      "data-testid": "icon",
      children: "\u2605"
    }));
    var icon = _react.screen.getByTestId('icon');
    var expected = 9733; // decimal converted charCode of character
    var actual = icon.textContent.codePointAt();
    expect(actual).toBe(expected);
  });
  test('should return the correct Unicode value when provided Unicode reference', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon.IconBase, {
      "data-testid": "icon",
      children: "\\u0F0028"
    }));
    var icon = _react.screen.getByTestId('icon');
    var expected = 983080; // decimal converted charCode of Unicode 'star' character
    var actual = icon.textContent.codePointAt();
    expect(actual).toBe(expected);
  });
  test('should support high code point Unicode values', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon.IconBase, {
      "data-testid": "icon",
      children: String.fromCodePoint(0x0F0028)
    }));
    var icon = _react.screen.getByTestId('icon');
    var expected = 983080; // decimal converted charCode of Unicode 'star' character
    var actual = icon.textContent.codePointAt();
    expect(actual).toBe(expected);
  });
});