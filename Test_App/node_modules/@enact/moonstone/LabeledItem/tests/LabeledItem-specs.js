"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _LabeledItem = _interopRequireDefault(require("../LabeledItem"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
describe('LabeledItem Specs', function () {
  test('should render a label `div` by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledItem["default"], {
      label: "The Label",
      children: "I am a labeledItem"
    }));
    var actual = _react.screen.queryByText('The Label');
    expect(actual).toBeInTheDocument();
  });
  test('should not render a label if there is no \'label\' prop', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledItem["default"], {
      children: "I am a labeledItem"
    }));
    var actual = _react.screen.queryByText('The Label');
    expect(actual).toBeNull();
  });
  test('should create a LabeledItem that is enabled by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledItem["default"], {
      "data-testid": "enabled-item",
      children: "I am a labeledItem"
    }));
    var expected = 'false';
    var actual = _react.screen.getByTestId('enabled-item');
    expect(actual).toHaveAttribute('aria-disabled', expected);
  });
  test('should have \'disabled\' HTML attribute when \'disabled=true\'', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledItem["default"], {
      "data-testid": "enabled-item",
      disabled: true,
      children: "I am a disabled labeledItem"
    }));
    var expected = 'true';
    var actual = _react.screen.getByTestId('enabled-item');
    expect(actual).toHaveAttribute('aria-disabled', expected);
  });
});