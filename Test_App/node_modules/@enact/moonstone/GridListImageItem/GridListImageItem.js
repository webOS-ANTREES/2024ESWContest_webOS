"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.GridListImageItemDecorator = exports.GridListImageItemBase = exports.GridListImageItem = void 0;
var _kind = _interopRequireDefault(require("@enact/core/kind"));
var _Spottable = _interopRequireDefault(require("@enact/spotlight/Spottable"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _compose = _interopRequireDefault(require("ramda/src/compose"));
var _Icon = _interopRequireDefault(require("../Icon"));
var _Image = require("../Image");
var _Marquee = require("../Marquee");
var _Skinnable = _interopRequireDefault(require("../Skinnable"));
var _UiGridListImageItem = _interopRequireDefault(require("../UiGridListImageItem"));
var _GridListImageItemModule = _interopRequireDefault(require("./GridListImageItem.module.css"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["css", "selectionOverlay"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Provides Moonstone styled grid list image item components and behaviors.
 *
 * @example
 * <GridListImageItem
 *   caption="image0"
 *   source="https://placehold.co/100x100/9037ab/ffffff/png?text=Image0"
 *   subCaption="sub-image0"
 * />
 *
 * @module moonstone/GridListImageItem
 * @exports GridListImageItem
 * @exports GridListImageItemBase
 * @exports GridListImageItemDecorator
 */
var defaultPlaceholder = 'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' + '9zdmciPjxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzU1NSIgZmlsbD0iI2FhYSIg' + 'ZmlsbC1vcGFjaXR5PSIwLjIiIHN0cm9rZS1vcGFjaXR5PSIwLjgiIHN0cm9rZS13aWR0aD0iNiIgLz48L3N2Zz' + '4NCg==',
  captionComponent = function captionComponent(props) {
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Marquee.Marquee, _objectSpread({
      alignment: "center",
      marqueeOn: "hover"
    }, props));
  };

/**
 * A Moonstone styled base component for {@link moonstone/GridListImageItem.GridListImageItem|GridListImageItem}.
 *
 * @class GridListImageItemBase
 * @memberof moonstone/GridListImageItem
 * @extends moonstone/UiGridListImageItem.GridListImageItem
 * @ui
 * @public
 */
var GridListImageItemBase = exports.GridListImageItemBase = (0, _kind["default"])({
  name: 'GridListImageItem',
  propTypes: /** @lends moonstone/GridListImageItem.GridListImageItemBase.prototype */{
    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `icon` - The icon component class for default selection overlay
     * * `image` - The image component class
     * * `selected` - Applied when `selected` prop is `true`
     * * `caption` - The caption component class
     * * `subCaption` - The subCaption component class
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,
    /**
     * The voice control intent.
     *
     * @type {String}
     * @default 'Select'
     * @memberof moonstone/GridListImageItem.GridListImageItemBase.prototype
     * @public
     */
    'data-webos-voice-intent': _propTypes["default"].string,
    /**
     * Placeholder image used while {@link moonstone/GridListImageItem.GridListImageItem#source|source}
     * is loaded.
     *
     * @type {String}
     * @default 'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' +
     * '9zdmciPjxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzU1NSIgZmlsbD0iI2FhYSIg' +
     * 'ZmlsbC1vcGFjaXR5PSIwLjIiIHN0cm9rZS1vcGFjaXR5PSIwLjgiIHN0cm9rZS13aWR0aD0iNiIgLz48L3N2Zz' +
     * '4NCg=='
     * @public
     */
    placeholder: _propTypes["default"].string,
    /**
     * Applies a selected visual effect to the image, but only if `selectionOverlayShowing`
     * is also `true`.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    selected: _propTypes["default"].bool,
    /**
     * The custom selection overlay component to render. A component can be a stateless functional
     * component, `kind()` or React component. The following is an example with custom selection
     * overlay kind.
     *
     * Usage:
     * ```
     * const SelectionOverlay = kind({
     * 	render: () => <div>custom overlay</div>
     * });
     *
     * <GridListImageItem selectionOverlay={SelectionOverlay} />
     * ```
     *
     * @type {Function}
     * @public
     */
    selectionOverlay: _propTypes["default"].func
  },
  defaultProps: {
    'data-webos-voice-intent': 'Select',
    placeholder: defaultPlaceholder,
    selected: false
  },
  styles: {
    css: _GridListImageItemModule["default"],
    publicClassNames: ['gridListImageItem', 'icon', 'image', 'selected', 'caption', 'subCaption']
  },
  render: function render(_ref) {
    var css = _ref.css,
      selectionOverlay = _ref.selectionOverlay,
      rest = _objectWithoutProperties(_ref, _excluded);
    if (selectionOverlay) {
      rest['role'] = 'checkbox';
      rest['aria-checked'] = rest.selected;
    }
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_UiGridListImageItem["default"], _objectSpread(_objectSpread({}, rest), {}, {
      captionComponent: captionComponent,
      css: css,
      iconComponent: _Icon["default"],
      imageComponent: _Image.ImageBase,
      selectionOverlay: selectionOverlay
    }));
  }
});

/**
 * Moonstone-specific GridListImageItem behaviors to apply to
 * {@link moonstone/GridListImageItem.GridListImageItem|GridListImageItem}.
 *
 * @hoc
 * @memberof moonstone/GridListImageItem
 * @mixes moonstone/Marquee.MarqueeController
 * @mixes spotlight/Spottable.Spottable
 * @mixes moonstone/Skinnable.Skinnable
 * @public
 */
var GridListImageItemDecorator = exports.GridListImageItemDecorator = (0, _compose["default"])((0, _Marquee.MarqueeController)({
  marqueeOnFocus: true
}), _Spottable["default"], _Skinnable["default"]);

/**
 * A moonstone-styled grid list image item, Marquee and Spottable applied.
 *
 * Usage:
 * ```
 * <GridListImageItem
 * 	caption="image0"
 * 	source="https://placehold.co/300x300/9037ab/ffffff/png?text=Image0"
 * 	subCaption="sub-image0"
 * />
 * ```
 *
 * @class GridListImageItem
 * @memberof moonstone/GridListImageItem
 * @extends moonstone/GridListImageItem.GridListImageItemBase
 * @mixes moonstone/GridListImageItem.GridListImageItemDecorator
 * @see {@link moonstone/GridListImageItem.GridListImageItemBase}
 * @ui
 * @public
 */
var GridListImageItem = exports.GridListImageItem = GridListImageItemDecorator(GridListImageItemBase);
var _default = exports["default"] = GridListImageItem;