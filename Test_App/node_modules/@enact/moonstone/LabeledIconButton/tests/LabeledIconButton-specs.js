"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _LabeledIconButton = _interopRequireDefault(require("../LabeledIconButton"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
describe('LabeledIconButton Voice Control Specs', function () {
  test('should not have `selected` className by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      children: "star"
    }));
    var expected = 'selected';
    var actual = _react.screen.getByRole('button');
    expect(actual).not.toHaveClass(expected);
  });
  test('should have `selected` className when selected is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      selected: true,
      children: "star"
    }));
    var expected = 'selected';
    var actual = _react.screen.getByRole('button');
    expect(actual).toHaveClass(expected);
  });
  test('should have `flipHorizontal` className when "flip" is set to "horizontal"', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      flip: "horizontal",
      children: "star"
    }));
    var expected = 'flipHorizontal';
    var actual = _react.screen.getByRole('button').children[1].children[0];
    expect(actual).toHaveClass(expected);
  });
  test('should set "data-webos-voice-disabled" to IconButton', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      "data-webos-voice-disabled": true,
      children: "star"
    }));
    var expected = 'data-webos-voice-disabled';
    var actual = _react.screen.getByRole('button');
    expect(actual).toHaveAttribute(expected);
  });
  test('should set "data-webos-voice-group-label" to IconButton', function () {
    var voiceGroupLabel = 'voice group label';
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      "data-webos-voice-group-label": voiceGroupLabel,
      children: "star"
    }));
    var expected = voiceGroupLabel;
    var actual = _react.screen.getByRole('button');
    expect(actual).toHaveAttribute('data-webos-voice-group-label', expected);
  });
  test('should set "data-webos-voice-label" to IconButton', function () {
    var voiceLabel = 'voice label';
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      "data-webos-voice-label": voiceLabel,
      children: "star"
    }));
    var expected = voiceLabel;
    var actual = _react.screen.getByRole('button');
    expect(actual).toHaveAttribute('data-webos-voice-label', expected);
  });
  test('should set "data-webos-voice-intent" to IconButton', function () {
    var voiceIntent = 'Select PlayContent';
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_LabeledIconButton["default"], {
      "data-webos-voice-intent": voiceIntent,
      children: "star"
    }));
    var expected = voiceIntent;
    var actual = _react.screen.getByRole('button');
    expect(actual).toHaveAttribute('data-webos-voice-intent', expected);
  });
});