"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "FloatingLayerContext", {
  enumerable: true,
  get: function get() {
    return _useFloatingLayerDecorator.FloatingLayerContext;
  }
});
exports["default"] = exports.FloatingLayerDecorator = void 0;
Object.defineProperty(exports, "useFloatingLayerDecorator", {
  enumerable: true,
  get: function get() {
    return _useFloatingLayerDecorator.useFloatingLayerDecorator;
  }
});
var _hoc = _interopRequireDefault(require("@enact/core/hoc"));
var _useFloatingLayerDecorator = require("./useFloatingLayerDecorator");
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["className"];
/*
 * A higher-order component that adds a FloatingLayer adjacent to wrapped component.
 */
/**
 * Default config for {@link ui/FloatingLayer.FloatingLayerDecorator}.
 *
 * @memberof ui/FloatingLayer.FloatingLayerDecorator
 * @hocconfig
 */
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var defaultConfig = {
  /**
   * Element Id of the floatLayer
   *
   * @type {String}
   * @default 'floatLayer'
   * @public
   * @memberof ui/FloatingLayer.FloatingLayerDecorator.defaultConfig
   */
  floatLayerId: 'floatLayer',
  /**
   * Class name to be applied to wrapped component.
  	 * It can be used when you want to only apply
   * certain styles to the wrapped component and not to the float layer.
   *
   * @type {String}
   * @default ''
   * @public
   * @memberof ui/FloatingLayer.FloatingLayerDecorator.defaultConfig
   */
  wrappedClassName: ''
};

/**
 * A higher-order component that adds a FloatingLayer adjacent to the wrapped component.
 *
 * Any classes passed to the FloatingLayerDecorator will be applied to a wrapper surrounding the
 * wrapped component and the floating layer. If specified in the config, `wrappedClassName` will be
 * passed as `className` to the wrapped component.
 *
 * @class FloatingLayerDecorator
 * @memberof ui/FloatingLayer
 * @hoc
 * @public
 */
var FloatingLayerDecorator = exports.FloatingLayerDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var floatLayerId = config.floatLayerId,
    wrappedClassName = config.wrappedClassName;

  // eslint-disable-next-line no-shadow
  function FloatingLayerDecorator(props) {
    var className = props.className,
      rest = _objectWithoutProperties(props, _excluded);
    var hook = (0, _useFloatingLayerDecorator.useFloatingLayerDecorator)({
      className: className,
      floatLayerId: floatLayerId
    });
    return hook.provideFloatingLayer( /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread({}, rest), {}, {
      className: wrappedClassName
    }), "floatWrapped"));
  }
  return FloatingLayerDecorator;
});
var _default = exports["default"] = FloatingLayerDecorator;