"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _IdProvider = _interopRequireDefault(require("../IdProvider"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
describe('IdProvider', function () {
  test('should pass id to wrapped component', function () {
    var Base = function Base(props) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({
        role: "button"
      }, props));
    };
    var Component = (0, _IdProvider["default"])({
      generateProp: null,
      prefix: 'custom_'
    }, Base);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));
    var wrappedDiv = _react.screen.getByRole('button');
    var expected = 'custom_1';
    expect(wrappedDiv).toHaveAttribute('id', expected);
  });
  test('should create a generation function with a name indicated by \'generateProp\'', function () {
    var expected = 'customProp';
    var actual;
    var Base = function Base(props) {
      actual = props;
      return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {});
    };
    var Component = (0, _IdProvider["default"])({
      generateProp: expected,
      prefix: 'custom_'
    }, Base);
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, {}));

    // eslint-disable-next-line no-undefined
    expect(actual[expected]).not.toBe(undefined);
    expect(typeof actual[expected]).toBe('function');
  });
});