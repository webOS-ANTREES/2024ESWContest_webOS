"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _Image = _interopRequireWildcard(require("../Image"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var src = {
  'hd': 'http://lorempixel.com/64/64/city/1/',
  'fhd': 'http://lorempixel.com/128/128/city/1/',
  'uhd': 'http://lorempixel.com/256/256/city/1/'
};
describe('Image Specs', function () {
  test('should only have image class without sizing', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "none",
      src: src
    }));
    var expected = 'image';
    var imageElement = _react.screen.getByTestId('image');
    expect(imageElement).toHaveClass(expected);
  });
  test('should have class for fill', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fill",
      src: src
    }));
    var expected = 'fill';
    var imageElement = _react.screen.getByTestId('image');
    expect(imageElement).toHaveClass(expected);
  });
  test('should have class for fit', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fit",
      src: src
    }));
    var expected = 'fit';
    var imageElement = _react.screen.getByTestId('image');
    expect(imageElement).toHaveClass(expected);
  });
  test('should set role to img by default', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      "data-testid": "image",
      sizing: "fit",
      src: src
    }));
    var expected = 'img';
    var imageElement = _react.screen.getByTestId('image');
    expect(imageElement).toHaveAttribute('role', expected);
  });
  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image["default"], {
      ref: ref,
      src: src
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
});