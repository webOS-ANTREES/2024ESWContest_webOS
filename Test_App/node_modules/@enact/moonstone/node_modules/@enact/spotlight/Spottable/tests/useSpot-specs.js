"use strict";

var _handle = _interopRequireWildcard(require("@enact/core/handle"));
var _WithRef = require("@enact/core/internal/WithRef");
var _useHandlers = _interopRequireDefault(require("@enact/core/useHandlers"));
require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _classnames = _interopRequireDefault(require("classnames"));
var _react2 = require("react");
var _spotlight = _interopRequireDefault(require("../../src/spotlight.js"));
var _useSpottable = _interopRequireDefault(require("../useSpottable"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["className", "component", "disabled", "emulateMouse", "onSelectionCancel", "onSpotlightDisappear", "onSpotlightDown", "onSpotlightLeft", "onSpotlightRight", "onSpotlightUp", "selectionKeys", "spotlightDisabled", "spotlightId"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var forwardMouseUp = (0, _handle.forward)('onMouseUp'),
  forwardMouseDown = (0, _handle.forward)('onMouseDown'),
  forwardKeyDown = (0, _handle.forward)('onKeyDown'),
  forwardKeyUp = (0, _handle.forward)('onKeyUp'),
  id = 'test-useSpot';
var makeKeyEvent = function makeKeyEvent(keyCode) {
  return {
    keyCode: keyCode,
    which: keyCode
  };
};
var REMOTE_OK_KEY = 16777221;
var compRef = null;
var getCurrent = _spotlight["default"].getCurrent;
var callContext = function callContext(name) {
  return function (ev, props, context) {
    return context[name](ev, props);
  };
};
var spotHandlers = {
  onKeyDown: (0, _handle["default"])(forwardKeyDown, callContext('onKeyDown'), forwardMouseDown),
  onKeyUp: (0, _handle["default"])(forwardKeyUp, callContext('onKeyUp'), forwardMouseUp),
  onBlur: callContext('onBlur'),
  onFocus: callContext('onFocus'),
  onMouseEnter: callContext('onMouseEnter'),
  onMouseLeave: callContext('onMouseLeave')
};
describe('useSpottable', function () {
  function SpottableComponent(props) {
    var nodeRef = (0, _react2.useRef)();
    var getSpotRef = (0, _react2.useCallback)(function () {
      return nodeRef.current;
    }, []);
    var className = props.className,
      component = props.component,
      disabled = props.disabled,
      emulateMouse = props.emulateMouse,
      onSelectionCancel = props.onSelectionCancel,
      onSpotlightDisappear = props.onSpotlightDisappear,
      onSpotlightDown = props.onSpotlightDown,
      onSpotlightLeft = props.onSpotlightLeft,
      onSpotlightRight = props.onSpotlightRight,
      onSpotlightUp = props.onSpotlightUp,
      selectionKeys = props.selectionKeys,
      spotlightDisabled = props.spotlightDisabled,
      spotlightId = props.spotlightId,
      rest = _objectWithoutProperties(props, _excluded);
    var spot = (0, _useSpottable["default"])({
      disabled: disabled,
      emulateMouse: emulateMouse,
      getSpotRef: getSpotRef,
      onSelectionCancel: onSelectionCancel,
      onSpotlightDisappear: onSpotlightDisappear,
      onSpotlightDown: onSpotlightDown,
      onSpotlightLeft: onSpotlightLeft,
      onSpotlightRight: onSpotlightRight,
      onSpotlightUp: onSpotlightUp,
      selectionKeys: selectionKeys,
      spotlightDisabled: spotlightDisabled,
      spotlightId: spotlightId
    });
    var Comp = component || 'div';
    var CompWithRef = (0, _WithRef.WithRef)(Comp);
    rest.tabIndex = -1;
    var handlers = (0, _useHandlers["default"])(spotHandlers, rest, spot);
    compRef = nodeRef.current;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)(CompWithRef, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), spot.attributes), handlers), {}, {
      className: (0, _classnames["default"])(className, spot.className),
      disabled: disabled,
      outermostRef: nodeRef
    }));
  }
  beforeEach(function () {
    // Spotlight.getCurrent() did not work in unit tests. It always returns `undefined`.
    // So Spotlight.getCurrent() is replaced with the function returning the wrapped component by the Component
    // including `useSpottable`.
    _spotlight["default"].getCurrent = function () {
      return compRef;
    };
  });
  afterEach(function () {
    _spotlight["default"].getCurrent = getCurrent;
  });
  test('should add the spottable class', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
      "data-testid": id
    }));
    var div = _react.screen.getByTestId(id);
    var expected = 'spottable';
    expect(div).toHaveClass(expected);
  });
  test('should add the spottable class to a {disabled} component', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
      "data-testid": id,
      disabled: true
    }));
    var div = _react.screen.getByTestId(id);
    var expected = 'spottable';
    expect(div).toHaveClass(expected);
  });
  test('should not add the spottable class to a {spotlightDisabled} component', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
      "data-testid": id,
      spotlightDisabled: true
    }));
    var div = _react.screen.getByTestId(id);
    var expected = 'spottable';
    expect(div).not.toHaveClass(expected);
  });
  describe('should emit event properly', function () {
    test('should emit {onSpotlightUp} when the the {keydown} is emitted with 38 keycode', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        onSpotlightUp: spy
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(38));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should emit {onSpotlightDown} when the the {keydown} is emitted with 40 keycode', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        onSpotlightDown: spy
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(40));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should emit {onSpotlightLeft} when the the {keydown} is emitted with 37 keycode', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        onSpotlightLeft: spy
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(37));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should emit {onSpotlightRight} when the the {keydown} is emitted with 39 keycode', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        onSpotlightRight: spy
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(39));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should emulate {onMouseDown} when REMOTE_OK_KEY key is pressed', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        emulateMouse: true,
        onMouseDown: spy,
        selectionKeys: [13]
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(REMOTE_OK_KEY));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should emulate {onMouseUp} when {REMOTE_OK_KEY} key is pressed and released', function () {
      var spy = jest.fn();
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        emulateMouse: true,
        onMouseUp: spy,
        selectionKeys: [13]
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(REMOTE_OK_KEY));
      _react.fireEvent.keyUp(div, makeKeyEvent(REMOTE_OK_KEY));
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should not emulate {onMouseUp} if the default behavior is prevented even though {REMOTE_OK_KEY} key is pressed', function () {
      var spy = jest.fn();
      function onKeyUp(ev) {
        ev.preventDefault();
      }
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        "data-testid": id,
        emulateMouse: true,
        onKeyUp: onKeyUp,
        onMouseUp: spy,
        selectionKeys: [13]
      }));
      var div = _react.screen.getByTestId(id);
      _react.fireEvent.keyDown(div, makeKeyEvent(REMOTE_OK_KEY));
      _react.fireEvent.keyUp(div, makeKeyEvent(REMOTE_OK_KEY));
      expect(spy).not.toHaveBeenCalled();
    });
  });
  describe('shouldComponentUpdate', function () {
    test('should re-render when a non-Component prop changes', function () {
      var spy = jest.fn(function (props) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, props));
      });
      var _render = (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
          component: spy,
          "data-testid": id
        })),
        rerender = _render.rerender;
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        component: spy,
        "data-id": "123",
        "data-testid": id
      }));
      var expected = 2;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should re-render when {selectionKeys} changes', function () {
      var spy = jest.fn(function (props) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, props));
      });
      var _render2 = (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
          component: spy,
          "data-testid": id,
          selectionKeys: [1, 2, 3]
        })),
        rerender = _render2.rerender;
      rerender( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        component: spy,
        "data-testid": id,
        selectionKeys: [2, 1, 3]
      }));
      var expected = 2;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
    test('should not re-render when focused', function () {
      var spy = jest.fn(function (props) {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", _objectSpread({}, props));
      });
      (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(SpottableComponent, {
        component: spy,
        "data-testid": id
      }));
      var div = _react.screen.getByTestId(id);
      div.focus();
      var expected = 1;
      expect(spy).toHaveBeenCalledTimes(expected);
    });
  });
});