"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _IconButton = _interopRequireDefault(require("../IconButton"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
describe('IconButton Specs', function () {
  test('should apply same `size` prop to both <Icon> and <Button> children', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_IconButton["default"], {
      size: "small",
      children: "star"
    }));
    var button = _react.screen.getByRole('button');
    var icon = button.lastElementChild.firstElementChild;
    var expected = 'small';
    expect(button).toHaveClass(expected);
    expect(icon).toHaveClass(expected);
  });
  test('should always maintain minWidth=false for its <Button> child', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_IconButton["default"], {
      minWidth: true,
      children: "star"
    }));
    var button = _react.screen.getByRole('button');
    var notExpected = 'minWidth';
    expect(button).not.toHaveClass(notExpected);
  });
});