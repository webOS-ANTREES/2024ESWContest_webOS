"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ActivityPanels", {
  enumerable: true,
  get: function get() {
    return _ActivityPanels["default"];
  }
});
Object.defineProperty(exports, "AlwaysViewingPanels", {
  enumerable: true,
  get: function get() {
    return _AlwaysViewingPanels["default"];
  }
});
Object.defineProperty(exports, "Breadcrumb", {
  enumerable: true,
  get: function get() {
    return _Breadcrumb["default"];
  }
});
Object.defineProperty(exports, "Header", {
  enumerable: true,
  get: function get() {
    return _Header["default"];
  }
});
Object.defineProperty(exports, "HeaderBase", {
  enumerable: true,
  get: function get() {
    return _Header.HeaderBase;
  }
});
Object.defineProperty(exports, "Panel", {
  enumerable: true,
  get: function get() {
    return _Panel["default"];
  }
});
Object.defineProperty(exports, "Panels", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "PanelsBase", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "Routable", {
  enumerable: true,
  get: function get() {
    return _Routable["default"];
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function get() {
    return _Routable.Route;
  }
});
exports["default"] = void 0;
var _Routable = _interopRequireWildcard(require("@enact/ui/Routable"));
var _ActivityPanels = _interopRequireDefault(require("./ActivityPanels"));
var _AlwaysViewingPanels = _interopRequireDefault(require("./AlwaysViewingPanels"));
var _Breadcrumb = _interopRequireDefault(require("./Breadcrumb"));
var _Header = _interopRequireWildcard(require("./Header"));
var _Panel = _interopRequireDefault(require("./Panel"));
var _Panels = _interopRequireDefault(require("./Panels"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
/**
 * Panels provides a way to manage different screens of an app.
 *
 * @module moonstone/Panels
 * @exports ActivityPanels
 * @exports AlwaysViewingPanels
 * @exports Breadcrumb
 * @exports Header
 * @exports Panel
 * @exports Panels
 * @exports PanelsBase
 * @exports Routable
 * @exports Route
 */
var _default = exports["default"] = _Panels["default"];