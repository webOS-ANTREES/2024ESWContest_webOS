"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onlyUpdateForProps = exports.extractVoiceProps = void 0;
var _react = require("react");
/**
 * Removes voice control related props from `props` and returns them in a new object.
 *
 * @function
 * @param   {Object}    props    Props object
 *
 * @returns {Object}             voice control related props
 * @memberof moonstone/internal/util
 * @private
 */
var extractVoiceProps = exports.extractVoiceProps = function extractVoiceProps(props) {
  var obj = {};
  Object.keys(props).forEach(function (key) {
    if (key.indexOf('data-webos-voice-') === 0) {
      obj[key] = props[key];
      delete props[key];
    }
  });
  return obj;
};

/**
 * Updates component only when given props are not shallowly equivalent, not updating otherwise.
 *
 * @function
 * @param   {any}    wrapped    A component
*  @param   {Array}  propKeys   Prop keys to compare
 *
 * @returns {any}               Conditionally memoized component
 * @memberof moonstone/internal/util
 * @private
 */
var onlyUpdateForProps = exports.onlyUpdateForProps = function onlyUpdateForProps(wrapped, propKeys) {
  return /*#__PURE__*/(0, _react.memo)(wrapped, function (prevProps, nextProps) {
    var hasOwn = Object.prototype.hasOwnProperty;
    if (Array.isArray(propKeys)) {
      return propKeys.every(function (key) {
        return hasOwn.call(prevProps, key) && hasOwn.call(nextProps, key) && Object.is(prevProps[key], nextProps[key]);
      });
    }
    return false;
  });
};