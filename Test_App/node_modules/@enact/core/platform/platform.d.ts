// Type definitions for core/platform

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

export interface PlatformDescription {
  /**
   * The name of the detected browser
   */
  browserName: string /**
   * The version of the detected browser
   */;
  browserVersion: number /**
   * The version of the detected browser, if chrome browser is detected
   */;
  chrome: number /**
   * Additional information about the detected platform. Deprecated: will be removed in 5.0.0.
   */;
  extra?: object /**
   * The version of the detected browser, if firefox browser is detected
   */;
  firefox: number /**
   * `true`  if the platform has native double-finger events. Deprecated: will be removed in 5.0.0.
   */;
  gesture: boolean /**
   * `true`  only if  `window`  is  `undefined` . Deprecated: will be removed in 5.0.0. Use  `type`  instead.
   */;
  node: boolean /**
   * The name of the platform, if detected. Deprecated: will be removed in 5.0.0. Use  `browserName`  instead for browser names.
   */;
  platformName?: string /**
   * The version of the detected browser, if safari browser is detected
   */;
  safari: number /**
   * `true`  if the platform has native single-finger events. Deprecated: will be removed in 5.0.0. Use  `touchEvent`  instead.
   */;
  touch: boolean /**
   * `true`  if the browser has native touch events
   */;
  touchEvent: boolean /**
   * `true`  if the platform has a touch screen. Deprecated: will be removed in 5.0.0. Use  `touchScreen`  instead.
   */;
  touchscreen: boolean /**
   * `true`  if the platform has a touch screen
   */;
  touchScreen: boolean /**
   * The type of the detected platform. One of 'desktop', 'mobile', 'webos', 'node', or 'unknown'
   */;
  type: string /**
   * `true`  for any unknown system. Deprecated: will be removed in 5.0.0. Use  `type`  instead.
   */;
  unknown: boolean;
}
/**
 * Returns the    object.
 */
export function detect(): PlatformDescription;
/**
 * Provides basic information about the running platform.
 */
export declare const platform: PlatformDescription;

export default platform;
