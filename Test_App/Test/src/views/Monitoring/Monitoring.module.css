.container {
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-columns: 0.5fr 1fr 1fr;
    grid-template-rows: auto;
    /* 첫 번째 행은 자동 높이, 두 번째 행은 남은 공간 사용 */
    gap: 10px;
    padding: 20px;
    box-sizing: border-box;
    background: #fcfcfc;
    overflow-x: hidden;
}

.logContainer {
    display: flex;
    flex-direction: column;
    background-color: rgba(255, 255, 255, 0.8);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    /* 컨테이너 전체 높이 사용 */
    box-sizing: border-box;
    width: 100%;/*전체 너비 사용*/
    height: 100%;/*전체 높이 사용*/
}

.sensorContainer {
    display: grid;
    grid-template-rows: auto 1fr;
    /* 상단에 센서 데이터, 하단에 그래프 배치 */
    gap: 20px;
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 10px;
    height: 100%;
}

.currentSensorDataContainer {
    margin-bottom: 20px;
    /* 최신 센서 데이터 아래에 여백 추가 */
    background-color: rgba(255, 255, 255, 0.8);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    width: 100%;
}

.sensorChartContainer {
    display: grid;
    grid-template-columns: 1fr;
    /* 가로로 세 개의 그래프 배치 */
    gap: 10px;
    width: 100%;/*전체 너비 사용*/
    height: 100%;/*전체 높이 사용*/
}

.weatherContainer {
    display: grid;
    grid-template-rows: auto 1fr;
    align-items: start;
    height: 100%;
}

.weatherMain {
    display: grid;
    grid-template-columns: 1fr;
    /* 날씨 버튼과 두 개의 그래프를 나란히 배치 */
    gap: 10px; /* 그래프 간의 간격 추가 */
}

.weatherButton {
    border-radius: 10px;
    padding: 6rem;
    cursor: pointer;
    display: gird;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 200px;
    height: 100px;
    box-sizing: border-box;
    text-align: center;
    transition: background 0.3s ease;
    width: 10%; /* 부모 요소의 전체 너비 사용 */
    height: auto; /* 자동 높이 사용 */
}

.detailweatherContainer {
    grid-row-start: 3;
    max-height: 40vh;
    overflow-y: auto;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 10px;
    margin-bottom: 20px;
    width: 100%;
    font-size : 45px;
    height: auto;
}

.weatherTable {
    width: 100%;
    border-collapse: collapse;
}

.weatherTable th,
.weatherTable td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
}

.weatherTable th {
    background-color: #f2f2f2;
    font-weight: bold;
}

.chartContainer {
    background-color: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    width: 100%;
    height: 100%;
}

.currentTime {
    grid-column: 1 / 3;
    text-align: right;
    font-weight: bold;
    font-size: 1em;
    margin-bottom: 2rem;
}

.cityName {
    font-size: 1.5rem;
    font-weight: bold;
}

.temperature {
    font-size: 1.2rem;
    margin-top: 1rem;
}

.humidity,
.description {
    font-size: 1.2rem;
    margin-top: 0.5rem;
}

/* 미디어 쿼리로 반응형 조정 */
@media (max-width: 1200px) {
    .weatherMain {
        grid-template-columns: 1fr; /* 1200px 이하에서도 한 열로 조정 */
    }

    .sensorChartContainer {
        grid-template-columns: 1fr; /* 1200px 이하에서도 한 열로 유지 */
    }
}

@media (max-width: 768px) {
    .weatherMain {
        grid-template-columns: 1fr; /* 768px 이하에서도 한 열로 조정 */
    }

    .sensorChartContainer {
        grid-template-columns: 1fr; /* 768px 이하에서도 한 열로 유지 */
    }

    .logContainer {
        display: block; /* 작은 화면에서는 flex를 block으로 전환 */
    }
}